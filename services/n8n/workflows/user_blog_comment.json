{
  "name": "user/blog/comment",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "user/blog/comment",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        0,
        0
      ],
      "id": "ba431005-e0d2-4d28-8afc-6e9ce76c694a",
      "name": "Webhook",
      "webhookId": "af3a5950-c7b5-401a-8873-2b0087a00db6"
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ \n  {\n    \"isToxic\": $json.output.isToxic\n  }\n}}",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.2,
      "position": [
        596,
        0
      ],
      "id": "899f3bb1-65ad-41b8-9ea6-130f5a2dd9bb",
      "name": "Respond to Webhook"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.body.comment }}",
        "hasOutputParser": true,
        "messages": {
          "messageValues": [
            {
              "message": "You are a content moderation assistant for a public blog. When given a user comment, evaluate it for any of the following issues:   \n• Explicit adult sexual content   \n• Graphic violence or gore   \n• Encouragement of self-harm or suicide   \n• Advice or instructions for illegal activities   \n• Sharing of personal or confidential information (PII)   \n• Spam, phishing, or promotional flooding   \n• False statements that could defame or mislead (misinformation)   \n• Content endangering minors (including sexual or exploitative)    \nIf any issue is present, the comment is **inappropriate**. Otherwise it is **appropriate**.\n\n**Output only** a JSON object with these fields (no extra text):  \n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"isToxic\": { \"type\": \"boolean\" }\n  },\n  \"required\": [\"isToxic\"]\n}"
            }
          ]
        }
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.6,
      "position": [
        220,
        0
      ],
      "id": "ff17885a-1def-4491-9e2e-bfe858098a43",
      "name": "Basic LLM Chain"
    },
    {
      "parameters": {
        "model": "deepseek/deepseek-r1:free",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
      "typeVersion": 1,
      "position": [
        248,
        220
      ],
      "id": "7fda5823-d590-41c7-a868-f9efdcef8cb2",
      "name": "OpenRouter Chat Model",
      "credentials": {
        "openRouterApi": {
          "id": "u0VdpHpuUairi7Vs",
          "name": "OpenRouter account"
        }
      }
    },
    {
      "parameters": {
        "schemaType": "manual",
        "inputSchema": "{\n  \"type\": \"object\",\n  \"properties\": {\n    \"isToxic\": { \"type\": \"boolean\" }\n  },\n  \"required\": [\"isToxic\"]\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        368,
        220
      ],
      "id": "f62da171-737a-40ed-8e15-362652719af1",
      "name": "Structured Output Parser"
    }
  ],
  "pinData": {},
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "Basic LLM Chain",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenRouter Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Basic LLM Chain",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Basic LLM Chain": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser": {
      "ai_outputParser": [
        [
          {
            "node": "Basic LLM Chain",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "bcf3f586-e1c5-46fe-b02a-feb9f272ccdf",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "fffe95e4168eb8ac25d5dc386bd1e0328cb6eab818fff1ceac1fca904b6f2fbf"
  },
  "id": "xOla1E5YnOqaw3pC",
  "tags": []
}