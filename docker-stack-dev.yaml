networks:
  network-blog:
    external: true

volumes:
  postgres:

secrets:
  BLOG_DJANGO_SECRET_KEY:
    external: true
  BLOG_POSTGRES_DB:
    external: true
  BLOG_POSTGRES_USER:
    external: true
  BLOG_POSTGRES_PASSWORD:
    external: true
  BLOG_POSTGRES_URL:
    external: true

services:
  dozzle:
    image: amir20/dozzle
    networks:
      - network-blog
    environment:
      - DOZZLE_NO_ANALYTICS=true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    ports:
      - '8080:8080'

  postgres:
    image: image-blog-postgres
    networks:
      - network-blog
    secrets:
      - BLOG_POSTGRES_DB
      - BLOG_POSTGRES_USER
      - BLOG_POSTGRES_PASSWORD
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_DB_FILE: /run/secrets/BLOG_POSTGRES_DB
      POSTGRES_USER_FILE: /run/secrets/BLOG_POSTGRES_USER
      POSTGRES_PASSWORD_FILE: /run/secrets/BLOG_POSTGRES_PASSWORD
    volumes:
      - postgres:/var/lib/postgresql/data

  pgweb:
    image: sosedoff/pgweb
    networks:
      - network-blog
    secrets:
      - BLOG_POSTGRES_URL
    entrypoint: ['/bin/sh']
    command:
      - -c
      - 'pgweb --url "$$(cat /run/secrets/BLOG_POSTGRES_URL)?sslmode=disable" --bind 0.0.0.0 --listen 8081'
    ports:
      - '8081:8081'

  django:
    image: image-blog-django
    networks:
      network-blog:
        aliases:
          - stack-blog-django
    secrets:
      - BLOG_DJANGO_SECRET_KEY
      - BLOG_POSTGRES_URL
    volumes:
      - ./services/django:/app

  nextjs:
    image: image-blog-nextjs
    networks:
      - network-blog
    volumes:
      - ./services/nextjs:/app
      - /app/node_modules
      - /app/.next

  nginx:
    image: image-blog-nginx
    networks:
      - network-blog
    volumes:
      - ./services/nginx/certs:/etc/nginx/certs:ro
      - ./services/nginx/nginx-development.conf:/etc/nginx/nginx.conf:ro
    ports:
      - '443:443'
